spring.application.name=OptiCV-back

spring.datasource.url=jdbc:sqlserver://opticv.database.windows.net:1433;database=OptiCV-Database_2025-05-09T07-37Z;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;
spring.datasource.username=opticv@opticv
spring.datasource.password=smart@2025

#create table if doesn't exist
spring.jpa.hibernate.ddl-auto=update

#Not to keep the JPA session open during view rendering
#Otherwise it can lead to performance issues and lazy loading exceptions
spring.jpa.open-in-view=false


spring.jpa.properties.hibernate.globally_quoted_identifiers=true

spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver


#HikariCP Configuration
# HikariCP Pool Configuration (add these lines)
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.maxLifetime=1800000
spring.datasource.hikari.autoCommit=true
spring.datasource.hikari.transactionIsolation=TRANSACTION_READ_COMMITTED

# SQL Server Specific Tuning
spring.datasource.hikari.leakDetectionThreshold=60000
spring.datasource.hikari.poolName=OptiCV-Pool

# Disable validation query for SQL Server (uses metadata instead)
spring.datasource.hikari.initializationFailTimeout=1